import time
import os
import telebot
import config
from parcing import WildBerries

data = dict()

bot = telebot.TeleBot(config.API_TOKEN)

deadline_url = None
deadline_title = None
deadline_price = None

infinity_cycle_checker = True


# message_handler –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
@bot.message_handler(commands=['delete'])
def choose_delete(message):
    try:
        if data.get(message.from_user.id) is not None and len(data.get(message.from_user.id)['info']) != 0:
            def read_blocked():
                with open("products.txt", "r", encoding='utf-8') as file:
                    content = file.read()
                    return content

            letter = open("products.txt", "w", encoding='utf-8')
            letter.write('–í–µ—Å—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:\n')

            for i in data.get(message.from_user.id)['info']:
                letter.write('‚Ä¢ ' + str(i[1]) + '\n')

            letter.write('\n' + '_(–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å)_')
            letter.close()

            bot.send_message(message.chat.id, text=read_blocked(), parse_mode='Markdown')
            bot.register_next_step_handler(message, delete)
        else:
            raise Exception

    except Exception as e:
        bot.send_message(message.chat.id,
                         f'*–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.*\n'
                         f'–ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /additem', parse_mode='Markdown')


def delete(message):  # –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    flag = False

    try:
        for i in data.get(message.from_user.id)['info']:
            if message.text in i:
                flag = True

                element = data.get(message.from_user.id)['info'].index(i)
                del (data.get(message.from_user.id)['info'])[element]

                bot.send_message(message.chat.id, '–ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω')

        if not flag:
            bot.send_message(message.chat.id,
                             '–£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–≤–∞—Ä–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º, –ª–∏–±–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é!')
            bot.register_next_step_handler(message, delete)

    except Exception as e:
        bot.send_message(message.chat.id, '–£–ø—Å! –í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.')
        bot.register_next_step_handler(message, delete)


# –ó–∞–ø—É—Å–∫ –ø—Ä–∏ '/start' –∏–ª–∏ '/add_item'
@bot.message_handler(commands=['start', 'additem'])
def send_welcome(message):
    hide_markup = telebot.types.ReplyKeyboardRemove()

    if data.get(message.from_user.id) is None:
        url_text = f'[–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ WildBerries](https://www.wildberries.ru/catalog)'

        bot.send_message(message.chat.id,
                         f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!'
                         f'\n\n–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ü–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã. '
                         f'\n–î–ª—è —ç—Ç–æ–≥–æ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å—Å—ã–ª–∫—É'
                         f' –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç —Å —Å–∞–π—Ç–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ WildBerries.'
                         f'\n\n({url_text})',
                         reply_markup=hide_markup, parse_mode='Markdown')
        bot.register_next_step_handler(message, link_request)
    else:
        url_text = f'[–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ WildBerries](https://www.wildberries.ru/catalog)'
        bot.send_message(message.chat.id, f'–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å —Å–∞–π—Ç–∞ {url_text}',
                         reply_markup=hide_markup, parse_mode='Markdown')
        bot.register_next_step_handler(message, link_request)


def link_request(message):  # –ó–∞–ø—Ä–æ—Å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä –∏ –µ–µ –ø—Ä–æ–≤–µ—Ä–∫–∞
    global deadline_title, deadline_url, deadline_price

    try:
        url = message.text
        wildberries = WildBerries(url)

        if wildberries.link_check():
            try:
                title, price = wildberries.parsing()

                image = wildberries.image()

                deadline_title = title[0]
                deadline_url = url
                deadline_price = price

                bot.send_photo(message.chat.id, image,
                               f'*–ù–∞–∑–≤–∞–Ω–∏–µ:*\n ‚Ä¢ {title[0]}\n\n'
                               f'*–¶–µ–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:*\n ‚Ä¢ {price}\n\n'
                               f'_(–¶–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –±–µ–∑ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Å–∫–∏–¥–∫–∏.'
                               f' –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –í–∞—à–µ–π –ª–∏—á–Ω–æ–π —Å–∫–∏–¥–∫–∏ –≤ –õ–ö WildBerries)_\n\n'
                               f'*–ù–∞–ø–∏—à–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä*'
                               f'\n_(–¢–æ–ª—å–∫–æ —á–∏—Å–ª–æ)_',
                               parse_mode='Markdown')

                if data.get(message.from_user.id) is None:
                    data[message.from_user.id] = dict()
                    data[message.from_user.id]['info'] = []

                bot.register_next_step_handler(message, choose_price)
            except Exception as e:
                bot.send_message(message.chat.id,
                                 '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–µ –µ—â–µ —Ä–∞–∑')
                bot.register_next_step_handler(message, link_request)

        else:
            bot.send_message(message.chat.id,
                             '–í–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–∫–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
            bot.register_next_step_handler(message, link_request)

    except Exception as e:
        bot.send_message(message.chat.id, '–¢–æ, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–æ–π, '
                                          '–ª–∏–±–æ –±—ã–ª–∞ –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ URL')
        bot.register_next_step_handler(message, link_request)


def choose_price(message):  # –ó–∞–ø—Ä–æ—Å –∂–µ–ª–∞–µ–º–æ–π —Ü–µ–Ω—ã
    global infinity_cycle_checker

    selected_price = message.text

    if selected_price.isdigit():
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ –≤ —Å–ø–∏—Å–æ–∫
        data[message.from_user.id]['info'].append([deadline_url, deadline_title, selected_price, deadline_price])

        print(data)

        bot.send_message(message.chat.id, '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω! –Ø –æ–ø–æ–≤–µ—â—É –≤–∞—Å, –∫–æ–≥–¥–∞ –ø—Ä–∏–¥–µ—Ç –≤—Ä–µ–º—è')

        if infinity_cycle_checker:
            infinity_cycle_checker = False
            infinity_cycle(message)
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, choose_price)


def infinity_cycle(message):  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
    try:
        while True:
            for i in data.get(message.from_user.id)['info']:
                number = []

                url = i[0]
                price = int(i[2])

                wildberries = WildBerries(url)
                image = wildberries.image()

                old_price = i[3]
                old_price = '\u0336'.join(old_price)

                url_text = f'[–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]({url})'

                if wildberries.link_check():
                    parsing_price_print = wildberries.only_price()
                    parsing_price = wildberries.only_price()

                    for numeral in list(parsing_price):
                        if numeral.isdigit():
                            number.append(numeral)
                    parsing_price = ''.join(number)

                    print(int(parsing_price), price)
                    if int(parsing_price) < price:
                        bot.send_photo(message.chat.id, image,
                                       f'üî•*–°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã*üî•'
                                       f'\n–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {old_price} | –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {parsing_price_print}'
                                       f'\n\n_(–¶–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –±–µ–∑ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Å–∫–∏–¥–∫–∏. –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–≤–∏—Å–∏—Ç '
                                       f'–æ—Ç –í–∞—à–µ–π –ª–∏—á–Ω–æ–π —Å–∫–∏–¥–∫–∏ –≤ –õ–ö WildBerries)_'
                                       f'\n\n({url_text})'
                                       , parse_mode='Markdown')
                        i[2] = int(parsing_price)
                time.sleep(10)

    except Exception as es:
        # –°–∞–º–æ–µ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã - —ç—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
        bot.register_next_step_handler(message, infinity_cycle)


bot.polling(none_stop=True)
# —Ç–∞–∫–∂–µ –¥–æ–¥–µ–ª–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–¥–º–µ—Ç–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è. –ß—Ç–æ –¥–µ–ª–∞—Ç—å —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º
